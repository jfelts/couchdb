%% Licensed under the Apache License, Version 2.0 (the "License"); you may not
%% use this file except in compliance with the License. You may obtain a copy of
%% the License at
%%
%%   http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing, software
%% distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
%% WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
%% License for the specific language governing permissions and limitations under
%% the License.

%% declare values
CouchJSName = case os:type() of
    {win32, _} ->
        "couchjs.exe";
    _ ->
        "couchjs"
end,
Version = string:strip(os:cmd("git describe"), right, $\n),

%% build config.h
ConfigH = [
 {"SM185", ""},
 {"HAVE_JS_GET_STRING_CHARS_AND_LENGTH", "1"},
 {"JSSCRIPT_TYPE", "JSObject*"},
 {"COUCHJS_NAME", "\"" ++ CouchJSName++ "\""},
 {"PACKAGE", "\"apache-couchdb\""},
 {"PACKAGE_BUGREPORT", "\"https://issues.apache.org/jira/browse/COUCHDB\""},
 {"PACKAGE_NAME", "\"Apache CouchDB\""},
 {"PACKAGE_STRING", "\"Apache CouchDB " ++ Version ++ "\""},
 {"PACKAGE_VERSION", "\"" ++ Version ++ "\""}],
ConfigSrc = [["#define ", K, " ", V, $\n] || {K, V} <- ConfigH],
ok = file:write_file("priv/couch_js/config.h", ConfigSrc),

%% compile-time parameters
JSLIBS = "-lmozjs185",
{CFLAGS0, LDFLAGS} = case os:type() of
    {unix, darwin} ->
        {"-DXP_UNIX -I/usr/local/include/js", JSLIBS};
    {unix, linux} ->
        {"-DXP_UNIX -I/usr/include/js", JSLIBS ++ " -lm"};
    {unix, _} ->
        {"-DXP_UNIX -I/usr/local/include/js", JSLIBS ++ " -lm"};
    _ ->
        {"-DXP_WIN -I/usr/include/js", JSLIBS}
end,
CFLAGS1 = CFLAGS0 ++ " -DWITHOUT_CURL",

PortEnv = [
    {"CFLAGS", "$CFLAGS -Wall -c -g -O2 " ++ CFLAGS1},
    {"LDFLAGS", LDFLAGS}],

CouchJSSpec = [{filename:join(["priv", CouchJSName]),
                ["priv/couch_js/{help,http,main,utf8,util}.c"]}],
SpawnSpec = [{"priv/couchspawnkillable", ["priv/spawnkillable/*.c"]}],

PortSpecs = case os:type() of
    {win32, _} ->
        CouchJSSpec ++ SpawnSpec;
    _ ->
        {ok, _} = file:copy("priv/spawnkillable/couchspawnkillable.sh",
                            "priv/couchspawnkillable"),
        os:cmd("chmod +x priv/couchspawnkillable"),
        CouchJSSpec
end,

[{port_env, PortEnv},
 {port_specs, PortSpecs}].
